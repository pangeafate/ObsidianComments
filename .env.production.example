# Production Environment Configuration for ObsidianComments
# Copy this file to .env.production and fill in the secure values

# Database Configuration
POSTGRES_DB=obsidian_comments
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_postgres_password_here

# Application Configuration
NODE_ENV=production
JWT_SECRET=your_secure_jwt_secret_here_at_least_32_chars

# CORS and Security
CORS_ORIGIN=https://obsidiancomments.serverado.app

# Rate Limiting (values in milliseconds and request counts)
RATE_LIMIT_WINDOW=900000  # 15 minutes in milliseconds
RATE_LIMIT_MAX=100        # Maximum requests per window

# Optional: Custom Redis Configuration (defaults to redis://redis:6379)
# REDIS_URL=redis://redis:6379

# Optional: Custom Database URL Override (auto-generated from POSTGRES_* vars)
# DATABASE_URL=postgresql://postgres:password@postgres:5432/obsidian_comments

# Security Notes:
# 1. POSTGRES_PASSWORD: Use a strong password with at least 16 characters
# 2. JWT_SECRET: Generate with: openssl rand -hex 32
# 3. Never commit this file with actual secrets to version control
# 4. Set proper file permissions: chmod 600 .env.production

# SSL Certificate Notes:
# - SSL certificates should be managed by Let's Encrypt or placed in /etc/letsencrypt/live/
# - The docker-compose.production.yml mounts /etc/letsencrypt/live/obsidiancomments.serverado.app
# - Update the SSL certificate path in docker-compose.production.yml if using different certificates

# Example secure values (DO NOT use these in production):
# POSTGRES_PASSWORD=MySecurePassword123!@#
# JWT_SECRET=a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456