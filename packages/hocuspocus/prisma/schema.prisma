generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id          String   @id  // Allow any string ID (remove auto-generated CUID)
  title       String
  content     String
  htmlContent String?  // Rendered HTML content
  renderMode  String   @default("markdown") // "markdown" or "html"
  metadata    Json?    // PostgreSQL supports native JSON
  publishedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Analytics fields for plugin compatibility
  views       Int      @default(0)
  activeEditors Int    @default(0)
  
  // Yjs document state
  yjsState    Bytes?
  
  // Version tracking
  versions    Version[]
  
  // Comment metadata
  comments    Comment[]
  
  @@map("documents")
}

model Version {
  id          String   @id @default(cuid())
  documentId  String
  version     Int
  snapshot    Bytes
  metadata    Json?    // PostgreSQL supports native JSON
  createdAt   DateTime @default(now())
  createdBy   String?
  message     String?
  
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  @@unique([documentId, version])
  @@map("versions")
}

model Comment {
  id          String   @id @default(cuid())
  documentId  String
  threadId    String?
  content     String
  author      String
  resolved    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Position in document (for Yjs integration)
  position    Json?    // PostgreSQL supports native JSON
  
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  @@map("comments")
}

model User {
  id          String   @id @default(cuid())
  username    String   @unique
  displayName String?
  color       String?
  createdAt   DateTime @default(now())
  lastSeen    DateTime @default(now())
  
  @@map("users")
}