version: '3.8'

services:
  frontend:
    build:
      context: ./
      dockerfile: packages/docker/Dockerfile.frontend
    container_name: obsidian-frontend
    environment:
      - VITE_API_URL=https://obsidiancomments.lakestrom.com/api
      - VITE_WS_URL=wss://obsidiancomments.lakestrom.com/ws
    networks:
      - obsidian-network
    depends_on:
      - backend

  backend:
    build:
      context: ./
      dockerfile: packages/docker/Dockerfile.backend
    container_name: obsidian-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://obsidian:obsidian_password@postgres:5432/obsidian_comments
      - FRONTEND_URL=https://obsidiancomments.lakestrom.com
      - PORT=8081
    networks:
      - obsidian-network
    depends_on:
      postgres:
        condition: service_healthy

  hocuspocus:
    build:
      context: ./
      dockerfile: packages/docker/Dockerfile.hocuspocus
    container_name: obsidian-hocuspocus
    environment:
      - NODE_ENV=production
      - PORT=8082
    networks:
      - obsidian-network
    ports:
      - "8082:8082"

  postgres:
    image: postgres:15-alpine
    container_name: obsidian-postgres
    environment:
      - POSTGRES_DB=obsidian_comments
      - POSTGRES_USER=obsidian
      - POSTGRES_PASSWORD=obsidian_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - obsidian-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U obsidian -d obsidian_comments"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: obsidian-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./packages/docker/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    networks:
      - obsidian-network
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:

networks:
  obsidian-network:
    driver: bridge