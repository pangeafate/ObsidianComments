name: TDD Validation Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-first-validation:
    name: Validate Test-First Development
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for commit analysis
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Verify TDD compliance (commit analysis)
        run: |
          cd obsidian-plugin
          node scripts/verify-tdd-commits.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run unit tests
        run: |
          cd obsidian-plugin
          npm test
      
      - name: Run tests with coverage
        run: |
          cd obsidian-plugin
          npm run test:coverage
      
      - name: Check coverage thresholds
        run: |
          cd obsidian-plugin
          npm run test:coverage -- --passWithNoTests=false
      
      - name: Run integration tests
        run: |
          cd obsidian-plugin
          npm run test:integration
      
      - name: TypeScript compilation check
        run: |
          cd obsidian-plugin
          npm run build
      
      - name: Lint code quality
        run: |
          cd obsidian-plugin
          npm run lint
      
      - name: Verify no implementation without tests
        run: |
          cd obsidian-plugin
          npm run verify-tdd
      
      - name: Upload coverage to Codecov
        if: matrix.node-version == '18.x'
        uses: codecov/codecov-action@v3
        with:
          file: obsidian-plugin/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
      
      - name: Create test report
        if: always()
        run: |
          cd obsidian-plugin
          npm run test:report
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: obsidian-plugin/test-results/

  mutation-testing:
    name: Mutation Testing (Quality Gate)
    runs-on: ubuntu-latest
    needs: test-first-validation
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Run mutation testing
        run: |
          cd obsidian-plugin
          npm run test:mutation
      
      - name: Check mutation score threshold
        run: |
          cd obsidian-plugin
          node scripts/check-mutation-score.js

  tdd-metrics:
    name: TDD Quality Metrics
    runs-on: ubuntu-latest
    needs: test-first-validation
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Calculate TDD metrics
        run: |
          cd obsidian-plugin
          npm run metrics:tdd
      
      - name: Generate metrics report
        run: |
          cd obsidian-plugin
          npm run metrics:report
      
      - name: Comment PR with metrics
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const metricsPath = path.join('obsidian-plugin', 'metrics-report.json');
              const metrics = JSON.parse(fs.readFileSync(metricsPath, 'utf8'));
              
              const comment = `## üß™ TDD Quality Metrics
              
              | Metric | Value | Status |
              |--------|--------|--------|
              | Test Coverage | ${metrics.coverage}% | ${metrics.coverage >= 85 ? '‚úÖ' : '‚ùå'} |
              | Test-to-Code Ratio | ${metrics.testToCodeRatio} | ${metrics.testToCodeRatio >= 1 ? '‚úÖ' : '‚ùå'} |
              | Mutation Score | ${metrics.mutationScore}% | ${metrics.mutationScore >= 80 ? '‚úÖ' : '‚ùå'} |
              | TDD Compliance | ${metrics.tddCompliance}% | ${metrics.tddCompliance >= 95 ? '‚úÖ' : '‚ùå'} |
              
              **Red-Green-Refactor Cycles**: ${metrics.redGreenCycles}
              **Average Cycle Time**: ${metrics.avgCycleTime}
              **Tests First Violations**: ${metrics.testsFirstViolations}
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read metrics report:', error.message);
            }

  security-scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Run security audit
        run: |
          cd obsidian-plugin
          npm audit --audit-level high
      
      - name: Check for known vulnerabilities
        run: |
          cd obsidian-plugin
          npx audit-ci --config audit-ci.json

  build-plugin:
    name: Build Plugin
    runs-on: ubuntu-latest
    needs: [test-first-validation, mutation-testing]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Build plugin
        run: |
          cd obsidian-plugin
          npm run build
      
      - name: Verify build artifacts
        run: |
          cd obsidian-plugin
          test -f main.js
          test -f manifest.json
          test -f styles.css
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugin-build
          path: |
            obsidian-plugin/main.js
            obsidian-plugin/manifest.json
            obsidian-plugin/styles.css

  pre-commit-hooks:
    name: Pre-commit Hook Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Simulate pre-commit hooks
        run: |
          cd obsidian-plugin
          npm run test
          npm run lint
          npm run verify-tdd
      
      - name: Check commit message format
        run: |
          cd obsidian-plugin
          node scripts/validate-commit-messages.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deployment-readiness:
    name: Deployment Readiness Check
    runs-on: ubuntu-latest
    needs: [test-first-validation, mutation-testing, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: obsidian-plugin/package-lock.json
      
      - name: Install dependencies
        run: |
          cd obsidian-plugin
          npm ci
      
      - name: Run full test suite
        run: |
          cd obsidian-plugin
          npm run test:all
      
      - name: Performance benchmarks
        run: |
          cd obsidian-plugin
          npm run test:performance
      
      - name: Compatibility checks
        run: |
          cd obsidian-plugin
          npm run test:compatibility
      
      - name: Generate deployment report
        run: |
          cd obsidian-plugin
          npm run generate:deployment-report
      
      - name: Create deployment artifact
        run: |
          cd obsidian-plugin
          npm run build:production
          tar -czf ../obsidian-comments-plugin.tar.gz main.js manifest.json styles.css
      
      - name: Upload deployment artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-ready-plugin
          path: obsidian-comments-plugin.tar.gz