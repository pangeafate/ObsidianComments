# E2E testing version of docker-compose with nginx but without SSL complexity
version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-obsidian_comments}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_e2e_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-obsidian_comments}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - obsidian_e2e_network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_e2e_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped
    networks:
      - obsidian_e2e_network

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.production
    environment:
      - NODE_ENV=development  # Use development for better logging
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-obsidian_comments}
      - REDIS_URL=redis://redis:6379
      - PORT=8081
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
      - JWT_SECRET=${JWT_SECRET}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - obsidian_e2e_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

  hocuspocus:
    build:
      context: ./packages/hocuspocus
      dockerfile: Dockerfile.production
    environment:
      - NODE_ENV=development  # Use development for better logging
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-obsidian_comments}
      - REDIS_URL=redis://redis:6379
      - PORT=8082
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - obsidian_e2e_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.production
      args:
        - VITE_API_URL=http://localhost/api
        - VITE_WS_URL=ws://localhost/ws
    restart: unless-stopped
    networks:
      - obsidian_e2e_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 20s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx-e2e.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
      hocuspocus:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - obsidian_e2e_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 15s

volumes:
  postgres_e2e_data:
  redis_e2e_data:

networks:
  obsidian_e2e_network:
    driver: bridge