version: '3.8'

services:
  # Local nginx to match production exactly
  nginx-local:
    image: nginx:alpine
    ports:
      - "3001:80"  # Use 3001 to avoid conflict with existing services
    volumes:
      - ./packages/docker/nginx-local.conf:/etc/nginx/conf.d/default.conf
      - ./packages/frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend-local
      - hocuspocus-local
    networks:
      - obsidian-local

  backend-local:
    build:
      context: .
      dockerfile: packages/docker/Dockerfile.backend
    environment:
      NODE_ENV: development
      PORT: 8081
      DATABASE_URL: postgresql://obsidian:obsidian_local@postgres-local:5432/obsidian_local
      REDIS_URL: redis://redis-local:6379
    ports:
      - "8091:8081"  # Use different port to avoid conflicts
    depends_on:
      - postgres-local
      - redis-local
    networks:
      - obsidian-local

  hocuspocus-local:
    build:
      context: .
      dockerfile: packages/docker/Dockerfile.hocuspocus
    environment:
      NODE_ENV: development
      PORT: 8082
      DATABASE_URL: postgresql://obsidian:obsidian_local@postgres-local:5432/obsidian_local
      REDIS_URL: redis://redis-local:6379
    ports:
      - "8092:8082"  # Use different port to avoid conflicts
    depends_on:
      - postgres-local
      - redis-local
    networks:
      - obsidian-local

  postgres-local:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: obsidian_local
      POSTGRES_USER: obsidian
      POSTGRES_PASSWORD: obsidian_local
    ports:
      - "5433:5432"  # Use different port to avoid conflicts
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U obsidian -d obsidian_local"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - obsidian-local

  redis-local:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Use different port to avoid conflicts
    volumes:
      - redis_local_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - obsidian-local

networks:
  obsidian-local:
    driver: bridge

volumes:
  postgres_local_data:
  redis_local_data: